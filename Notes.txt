30 July 2016
	by the way, sdl image, sdl net, sdl ttf, sdl mixer are all separately added
	quick reminder, an sdl surface is software rendered, whereas sdl textures are hardware rendered

31 July 2016
	touchups on window class and how it handles window resizes or display changes

1 August 2016
	working on renderable class
	sdl filepaths are tough as balls, whyyyyy
	"why is this blank program using 50% of my cpu" "oh, i didnt limit the framerate"
	able to render sprites
	didnt know why my test texture wasnt blitting, then i switched to a bmp, and abra kardabra and alakazam, it worked, thanks - image formats
	sdl_image png loading needs lobpng16-16.dll, who'da thunk

TODO - next day:
	work on displaying text with sdl_ttf
	stop with the dupes in renderable.cpp
	sort out sdl's working directory - sorted, made build directory the same as the source dir lol, >madlad

TODO:
	scene class which eventually calls SDL_RenderPresent
	variable simulation speed by simply specifying a multiplier, with 1.0f being normal speed, and 0.1f being "cool slow mo"
	you can modulate texture rgb values with SDL_SetTextureColorMod, http://lazyfoo.net/tutorials/SDL/12_color_modulation/index.php
	use SDL_RenderCopyEx instead of the regular RenderCopy, which grants you stuff like rotation around an origin as well as flipping it
	the scene class should split up its staged textures into static ones like the player and ui, and then the "world" which gets translated around the player(thanks for teaching me the mvp matrices; opengl)